Implement a basic calculator to evaluate a simple expression string.

The expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces .

Example 1:

Input: "1 + 1"
Output: 2
Example 2:

Input: " 2-1 + 2 "
Output: 3
Example 3:

Input: "(1+(4+5+2)-3)+(6+8)"
Output: 23

class Solution {
public:
    int calculate(string s) {
        stack<int>s1;
        stack<char>s2;
        int a=0;
        s.push_back('+');
        for (auto i:s)
        {
            if (i==' ')
                continue;
            if (i>='0' && i<='9')
                a=a*10+i-'0';
            else if (i=='(')
                s2.push(i);
            else
            {
                if (!s2.empty() && s2.top()!='(')
                {
                    if (s2.top()=='+')
                        s1.top()+=a;
                    else
                        s1.top()-=a;
                    s2.pop();
                }
                else
                    s1.push(a);              
                if (i!=')')
                {
                    s2.push(i);
                    a=0;  
                }                    
                else
                {
                    s2.pop();
                    a=s1.top();
                    s1.pop();
                }
            }
        }
        if (s1.empty())
            return a;
        else
            return s1.top();
    }
};
